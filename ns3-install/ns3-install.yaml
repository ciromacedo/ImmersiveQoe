---
    -   hosts: 127.0.0.1
        connection: local
        become: yes
        remote_user: root
        vars:
            ROOT_DIR : "/root"
            PATH_DIR_INSTALL : "/root/ns3_install"
            DIR_INSTALL : "/ns3_install"
            
        tasks:
            #- fail: 
            #    msg: "'internet_network_interface' not found, this parameter is required!"
            #  when: internet_network_interface == ''

            - name: Validando a quantidade de memória disponível. Min-4GB
              assert:
                that:
                  - ansible_memtotal_mb >= 3000
                msg: "Minimum memory requirements in the deployment environment is 4GB! Operation failed!"

            - name: Atualizando pacotes do SO, aguarde!
              apt: upgrade=dist force_apt_get=yes

            - name: Remove o diretório de instalação (caso exista)
              shell:  sudo rm -rf {{ PATH_DIR_INSTALL }}
              ignore_errors: true
                          
            - name: Instalando dependências, aguarde!
              apt:
                    name: ['wget', 'g++', 'cmake', 'ninja-build', 'curl', 'ccache', 'python3-pip', 'gir1.2-goocanvas-2.0', 'python3-gi', 'python3-gi-cairo', 'python3-pygraphviz', 'gir1.2-gtk-3.0', 'ipython3', 'python3-dev', 'pkg-config', 'sqlite3', 'python3-setuptools', 'qtbase5-dev', 'qtchooser', 'qt5-qmake', 'qtbase5-dev-tools', 'openmpi-bin', 'openmpi-common', 'openmpi-doc', 'libopenmpi-dev', 'mercurial', 'unzip', 'gdb', 'valgrind', 'clang-format', 'doxygen', 'graphviz', 'imagemagick', 'texlive', 'texlive-extra-utils', 'texlive-latex-extra', 'texlive-font-utils', 'dvipng', 'latexmk', 'python3-sphinx', 'dia', 'gsl-bin', 'libgsl-dev', 'libgslcblas0', 'tcpdump', 'sqlite', 'libsqlite3-dev', 'libxml2', 'libxml2-dev', 'libgtk-3-dev', 'vtun', 'lxc', 'uml-utilities', 'libboost-all-dev']
                    state: present
                    update_cache: yes

            - name: Instalando  cppyy - Biblioteca de interoperabilidade entre C++ e Python
              shell :  |
                    python3 -m pip install --user cppyy
            
            - name  : Criar diretório de instalação
              shell : mkdir {{ PATH_DIR_INSTALL }}

            - name: Downloado NS3 v-3.35
              shell:  wget https://www.nsnam.org/releases/ns-allinone-3.35.tar.bz2
              args:
                chdir: "{{ PATH_DIR_INSTALL }}"

            - name: Downloado NS3 v-3.35
              shell:  tar xjf ns-allinone-3.35.tar.bz2
              args:
                chdir: "{{ PATH_DIR_INSTALL }}"